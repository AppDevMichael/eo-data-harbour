version: "3.9"
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:2181
    kafka:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper
        ports:
            - 29092:29092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    database:
        image: timescale/timescaledb-ha:pg15-latest
        ports:
            - 5432:5432
        environment:
            - POSTGRES_PASSWORD=password
        volumes:
            - database-data:/home/postgres/pgdata/data
        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
    pgadmin:
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
            PGADMIN_DEFAULT_PASSWORD: password
            PGADMIN_LISTEN_PORT: 80
        ports:
            - 15432:80
        volumes:
            - pgadmin:/var/lib/pgadmin
        depends_on:
            - database
    ingress:
        build:
            context: eo_data_harbour/ingress
            dockerfile: Dockerfile
        depends_on:
            - kafka
            - database
        volumes:
            - ./eo_data_harbour/ingress:/app
        restart: always

volumes:
    database-data:
    pgadmin:
